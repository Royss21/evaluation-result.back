// <auto-generated />
using System;
using Infrastructure.Main.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Main.Migrations
{
    [DbContext(typeof(DbContextoPrincipal))]
    partial class DbContextoPrincipalModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Main.Auditoria.AuditoriaEntidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LlaveValores")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTabla")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ValoresAntiguos")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValoresNuevos")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditoriaEntidad");
                });

            modelBuilder.Entity("Domain.Main.Administrador.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Icono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("MenuPadreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MenuPadreId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Domain.Main.Administrador.RolMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RolId");

                    b.ToTable("RolMenu");
                });

            modelBuilder.Entity("Domain.Main.Autenticacion.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Domain.Main.Autenticacion.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("EsBloqueado")
                        .HasColumnType("bit");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoHash")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Domain.Main.Autenticacion.UsuarioRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioRol");
                });

            modelBuilder.Entity("Domain.Main.Autenticacion.UsuarioToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("FechaExpiracionRefrescarToken")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaExpiracionToken")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefrescarToken")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioToken");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Domain.Main.Entidades.ClienteDireccionEnvio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("EsPredeterminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UbigeoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UbigeoId");

                    b.ToTable("ClienteDireccionEnvio");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Compania", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contenedor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("ImagenLogoId")
                        .HasColumnType("int");

                    b.Property<string>("Movil")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UbigeoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.HasIndex("ImagenLogoId");

                    b.HasIndex("UbigeoId");

                    b.ToTable("Compania");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Cotizacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteDireccionEnvioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("EsPedidoPagado")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PorcentajeDescuento")
                        .HasColumnType("money");

                    b.Property<decimal>("PrecioEnvio")
                        .HasColumnType("money");

                    b.Property<Guid?>("RepartidorVehiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("money");

                    b.Property<decimal>("Total")
                        .HasColumnType("money");

                    b.Property<int>("UbigeoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteDireccionEnvioId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("RepartidorVehiculoId");

                    b.HasIndex("UbigeoId");

                    b.ToTable("Cotizacion");
                });

            modelBuilder.Entity("Domain.Main.Entidades.CotizacionDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("EsAdicional")
                        .HasColumnType("bit");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NombreBordado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PorcentajeDescuento")
                        .HasColumnType("money");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("money");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("money");

                    b.Property<int?>("TelaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("money");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TelaId");

                    b.ToTable("CotizacionDetalle");
                });

            modelBuilder.Entity("Domain.Main.Entidades.DocumentoIdentidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DocumentoIdentidad");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEntidadEstadoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("TipoEntidadEstadoId");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("Domain.Main.Entidades.FormaPago", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.ToTable("FormaPago");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Imagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contenedor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RutaImagen")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Imagen");
                });

            modelBuilder.Entity("Domain.Main.Entidades.MarcaVehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.ToTable("MarcaVehiculo");
                });

            modelBuilder.Entity("Domain.Main.Entidades.OperadoraTelefono", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.ToTable("OperadoraTelefono");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteDireccionEnvioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("EsPedidoPagado")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PorcentajeDescuento")
                        .HasColumnType("money");

                    b.Property<decimal>("PrecioEnvio")
                        .HasColumnType("money");

                    b.Property<Guid?>("RepartidorVehiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("money");

                    b.Property<decimal>("Total")
                        .HasColumnType("money");

                    b.Property<int>("UbigeoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteDireccionEnvioId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("RepartidorVehiculoId");

                    b.HasIndex("UbigeoId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Domain.Main.Entidades.PedidoCuota", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("FormaPagoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ImagenId")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoDeposito")
                        .HasColumnType("money");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Porcentaje")
                        .HasColumnType("money");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("ImagenId");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidoCuota");
                });

            modelBuilder.Entity("Domain.Main.Entidades.PedidoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("EsAdicional")
                        .HasColumnType("bit");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NombreBordado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PorcentajeDescuento")
                        .HasColumnType("money");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("money");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("money");

                    b.Property<int?>("TelaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("money");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TelaId");

                    b.ToTable("PedidoDetalle");
                });

            modelBuilder.Entity("Domain.Main.Entidades.PedidoHistorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidoHistorial");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Persona", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DocumentoIdentidadId")
                        .HasColumnType("int");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaNacimiento")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UbigeoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.HasIndex("DocumentoIdentidadId");

                    b.HasIndex("UbigeoId");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("Domain.Main.Entidades.PersonaTelefono", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NumeroContacto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("OperadoraTelefonoId")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OperadoraTelefonoId");

                    b.HasIndex("PersonaId");

                    b.ToTable("PersonaTelefono");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Producto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CodigoSunat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("EsSetProducto")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Domain.Main.Entidades.ProductoCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoCategoria");
                });

            modelBuilder.Entity("Domain.Main.Entidades.ProductoFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ImagenId")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ImagenId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoFoto");
                });

            modelBuilder.Entity("Domain.Main.Entidades.ProductoPrecio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PrecioConfeccion")
                        .HasColumnType("money");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("money");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TamanioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TamanioId");

                    b.ToTable("ProductoPrecio");
                });

            modelBuilder.Entity("Domain.Main.Entidades.ProductoSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductoItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("ProductoItemId");

                    b.ToTable("ProductoSet");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Repartidor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.ToTable("Repartidor");
                });

            modelBuilder.Entity("Domain.Main.Entidades.RepartidorPrecio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Precio")
                        .HasColumnType("money");

                    b.Property<Guid>("RepartidorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UbigeosId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RepartidorId");

                    b.ToTable("RepartidorPrecio");
                });

            modelBuilder.Entity("Domain.Main.Entidades.RepartidorVehiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("ImagenId")
                        .HasColumnType("int");

                    b.Property<int>("MarcaVehiculoId")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NumeroPlaca")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("RepartidorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoVehiculoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ImagenId");

                    b.HasIndex("MarcaVehiculoId");

                    b.HasIndex("RepartidorId");

                    b.HasIndex("TipoVehiculoId");

                    b.ToTable("RepartidorVehiculo");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Tamanio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.ToTable("Tamanio");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Tela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("EsTematica")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("ImagenId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.HasIndex("ImagenId");

                    b.ToTable("Tela");
                });

            modelBuilder.Entity("Domain.Main.Entidades.TelaColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("ImagenId")
                        .HasColumnType("int");

                    b.Property<int>("TelaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ImagenId");

                    b.HasIndex("TelaId");

                    b.ToTable("TelaColor");
                });

            modelBuilder.Entity("Domain.Main.Entidades.TipoEntidadEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoEntidadEstado");
                });

            modelBuilder.Entity("Domain.Main.Entidades.TipoVehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.ToTable("TipoVehiculo");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Ubigeo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodigoUbigeo")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Ubigeo");
                });

            modelBuilder.Entity("Domain.Main.Seguridad.Endpoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Entidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreAccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreControlador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RutaEndpoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Endpoint");
                });

            modelBuilder.Entity("Domain.Main.Seguridad.UsuarioEnpointBloqueado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("EndpointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsEliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("FechaCrea")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaEdita")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UsuarioCrea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioEdita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EndpointId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioEnpointBloqueado");
                });

            modelBuilder.Entity("Domain.Main.Administrador.Menu", b =>
                {
                    b.HasOne("Domain.Main.Administrador.Menu", "MenuPadre")
                        .WithMany()
                        .HasForeignKey("MenuPadreId");

                    b.Navigation("MenuPadre");
                });

            modelBuilder.Entity("Domain.Main.Administrador.RolMenu", b =>
                {
                    b.HasOne("Domain.Main.Administrador.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Autenticacion.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Domain.Main.Autenticacion.Usuario", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Domain.Main.Autenticacion.UsuarioRol", b =>
                {
                    b.HasOne("Domain.Main.Autenticacion.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Autenticacion.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Main.Autenticacion.UsuarioToken", b =>
                {
                    b.HasOne("Domain.Main.Autenticacion.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Categoria", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Cliente", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Persona", "Persona")
                        .WithOne("Cliente")
                        .HasForeignKey("Domain.Main.Entidades.Cliente", "PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Domain.Main.Entidades.ClienteDireccionEnvio", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Ubigeo", "Ubigeo")
                        .WithMany()
                        .HasForeignKey("UbigeoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Ubigeo");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Color", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Compania", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Imagen", "ImagenLogo")
                        .WithMany()
                        .HasForeignKey("ImagenLogoId");

                    b.HasOne("Domain.Main.Entidades.Ubigeo", "Ubigeo")
                        .WithMany()
                        .HasForeignKey("UbigeoId");

                    b.Navigation("ImagenLogo");

                    b.Navigation("Ubigeo");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Cotizacion", b =>
                {
                    b.HasOne("Domain.Main.Entidades.ClienteDireccionEnvio", "ClienteDireccionEnvio")
                        .WithMany()
                        .HasForeignKey("ClienteDireccionEnvioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.RepartidorVehiculo", "RepartidorVehiculo")
                        .WithMany()
                        .HasForeignKey("RepartidorVehiculoId");

                    b.HasOne("Domain.Main.Entidades.Ubigeo", "Ubigeo")
                        .WithMany()
                        .HasForeignKey("UbigeoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("ClienteDireccionEnvio");

                    b.Navigation("Estado");

                    b.Navigation("RepartidorVehiculo");

                    b.Navigation("Ubigeo");
                });

            modelBuilder.Entity("Domain.Main.Entidades.CotizacionDetalle", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("Domain.Main.Entidades.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Tela", "Tela")
                        .WithMany()
                        .HasForeignKey("TelaId");

                    b.Navigation("Color");

                    b.Navigation("Pedido");

                    b.Navigation("Producto");

                    b.Navigation("Tela");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Estado", b =>
                {
                    b.HasOne("Domain.Main.Entidades.TipoEntidadEstado", "TipoEntidadEstado")
                        .WithMany()
                        .HasForeignKey("TipoEntidadEstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoEntidadEstado");
                });

            modelBuilder.Entity("Domain.Main.Entidades.FormaPago", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("Domain.Main.Entidades.MarcaVehiculo", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("Domain.Main.Entidades.OperadoraTelefono", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Pedido", b =>
                {
                    b.HasOne("Domain.Main.Entidades.ClienteDireccionEnvio", "ClienteDireccionEnvio")
                        .WithMany()
                        .HasForeignKey("ClienteDireccionEnvioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.RepartidorVehiculo", "RepartidorVehiculo")
                        .WithMany()
                        .HasForeignKey("RepartidorVehiculoId");

                    b.HasOne("Domain.Main.Entidades.Ubigeo", "Ubigeo")
                        .WithMany()
                        .HasForeignKey("UbigeoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("ClienteDireccionEnvio");

                    b.Navigation("Estado");

                    b.Navigation("RepartidorVehiculo");

                    b.Navigation("Ubigeo");
                });

            modelBuilder.Entity("Domain.Main.Entidades.PedidoCuota", b =>
                {
                    b.HasOne("Domain.Main.Entidades.FormaPago", "FormaPago")
                        .WithMany()
                        .HasForeignKey("FormaPagoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Imagen", "Imagen")
                        .WithMany()
                        .HasForeignKey("ImagenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FormaPago");

                    b.Navigation("Imagen");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Domain.Main.Entidades.PedidoDetalle", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("Domain.Main.Entidades.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Tela", "Tela")
                        .WithMany()
                        .HasForeignKey("TelaId");

                    b.Navigation("Color");

                    b.Navigation("Pedido");

                    b.Navigation("Producto");

                    b.Navigation("Tela");
                });

            modelBuilder.Entity("Domain.Main.Entidades.PedidoHistorial", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Persona", b =>
                {
                    b.HasOne("Domain.Main.Entidades.DocumentoIdentidad", "DocumentoIdentidad")
                        .WithMany()
                        .HasForeignKey("DocumentoIdentidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Ubigeo", "Ubigeo")
                        .WithMany()
                        .HasForeignKey("UbigeoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocumentoIdentidad");

                    b.Navigation("Ubigeo");
                });

            modelBuilder.Entity("Domain.Main.Entidades.PersonaTelefono", b =>
                {
                    b.HasOne("Domain.Main.Entidades.OperadoraTelefono", "OperadoraTelefono")
                        .WithMany()
                        .HasForeignKey("OperadoraTelefonoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OperadoraTelefono");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Producto", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("Domain.Main.Entidades.ProductoCategoria", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Domain.Main.Entidades.ProductoFoto", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Imagen", "Imagen")
                        .WithMany()
                        .HasForeignKey("ImagenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Imagen");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Domain.Main.Entidades.ProductoPrecio", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Tamanio", "Tamanio")
                        .WithMany()
                        .HasForeignKey("TamanioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Tamanio");
                });

            modelBuilder.Entity("Domain.Main.Entidades.ProductoSet", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Producto", "ProductoItem")
                        .WithMany()
                        .HasForeignKey("ProductoItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("ProductoItem");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Repartidor", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Persona", "Persona")
                        .WithOne("Repartidor")
                        .HasForeignKey("Domain.Main.Entidades.Repartidor", "PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Domain.Main.Entidades.RepartidorPrecio", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Repartidor", "Repartidor")
                        .WithMany()
                        .HasForeignKey("RepartidorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Repartidor");
                });

            modelBuilder.Entity("Domain.Main.Entidades.RepartidorVehiculo", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Imagen", "Imagen")
                        .WithMany()
                        .HasForeignKey("ImagenId");

                    b.HasOne("Domain.Main.Entidades.MarcaVehiculo", "MarcaVehiculo")
                        .WithMany()
                        .HasForeignKey("MarcaVehiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Repartidor", "Repartidor")
                        .WithMany()
                        .HasForeignKey("RepartidorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.TipoVehiculo", "TipoVehiculo")
                        .WithMany()
                        .HasForeignKey("TipoVehiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Imagen");

                    b.Navigation("MarcaVehiculo");

                    b.Navigation("Repartidor");

                    b.Navigation("TipoVehiculo");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Tamanio", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Tela", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Imagen", "Imagen")
                        .WithMany()
                        .HasForeignKey("ImagenId");

                    b.Navigation("Compania");

                    b.Navigation("Imagen");
                });

            modelBuilder.Entity("Domain.Main.Entidades.TelaColor", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Entidades.Imagen", "Imagen")
                        .WithMany()
                        .HasForeignKey("ImagenId");

                    b.HasOne("Domain.Main.Entidades.Tela", "Tela")
                        .WithMany()
                        .HasForeignKey("TelaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Imagen");

                    b.Navigation("Tela");
                });

            modelBuilder.Entity("Domain.Main.Entidades.TipoVehiculo", b =>
                {
                    b.HasOne("Domain.Main.Entidades.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("Domain.Main.Seguridad.UsuarioEnpointBloqueado", b =>
                {
                    b.HasOne("Domain.Main.Seguridad.Endpoint", "Endpoint")
                        .WithMany()
                        .HasForeignKey("EndpointId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Main.Autenticacion.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Endpoint");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Main.Entidades.Persona", b =>
                {
                    b.Navigation("Cliente")
                        .IsRequired();

                    b.Navigation("Repartidor")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
